# action.yml
name: 'amplify-build-status'
description: 'Get the status of an Amplify build, or wait for it to complete.'
inputs:
  app-id:
    description: 'The ID of the Amplify app.'
    required: true
    default: ''
  branch-name:
    description: 'The connected branch to the Amplify console.'
    required: true
    default: ''
  commit-id:
    description: 'The commit ID that the build was triggered from.'
    required: true
    default: ''
  wait:
    description: 'The action will prevent continuing until the next step until the build fails or succeeds. Boolean.'
    required: false
    default: false
  timeout:
    description: 'Timeout in minutes for the wait. A value of 0 will wait forever!'
    required: false
    default: 120
  no-fail:
    description: 'Use successful exit status even if the build has failed.'
    required: false
    default: false
outputs:
  status:
    description: 'The result of the build.'
  backend_environment:
    description: 'The environment name'
  graphql_endpoint:
    description: 'The GraphQL endpoint.'
runs:
  using: 'composite'
  steps:
    - name: Install jq
      shell: bash
      run: |
        if ! command -v jq &> /dev/null; then
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update && sudo apt-get install -y jq
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install jq
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            choco install jq
          fi
        fi
    - name: Run amplify build status check
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/entrypoint.sh"
        "${{ github.action_path }}/entrypoint.sh"
      env:
        APP_ID: ${{ inputs.app-id }}
        BRANCH_NAME: ${{ inputs.branch-name }}
        COMMIT_ID: ${{ inputs.commit-id }}
        WAIT: ${{ inputs.wait }}
        TIMEOUT: ${{ inputs.timeout }}
        NO_FAIL: ${{ inputs.no-fail }}
branding:
  icon: 'check-circle'
  color: 'orange'
